name: Build (Windows)
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch: # nothing here
jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        build_type: [Debug, Release]
        sys: [mingw64, clang64]
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Checkout Submodules
      run: git submodule update --init --recursive
      shell: cmd

    - name: Install MSYS2
      uses: msys2/setup-msys2@v2
      with:
        msystem: ${{matrix.sys}}
        update: true
        install: >-
          git
          make
        pacboy: >-
          toolchain:p
          cmake:p

    - name: Configure CMake (mingw64)
      if: ${{ matrix.sys == 'mingw64' }}
      run: cmake -G "Unix Makefiles" -B build -DCMAKE_BUILD_TYPE=${{matrix.build_type}} -DCMAKE_C_COMPILER="/mingw64/bin/gcc.exe" -DCMAKE_CXX_COMPILER="/mingw64/bin/g++.exe"

    - name: Configure CMake (clang64)
      if: ${{ matrix.sys == 'clang64' }}
      run: cmake -G "Unix Makefiles" -B build -DCMAKE_BUILD_TYPE=${{matrix.build_type}} -DCMAKE_C_COMPILER="/clang64/bin/clang.exe" -DCMAKE_CXX_COMPILER="/clang64/bin/clang++.exe"

    - name: Build
      run: cmake --build build --config ${{matrix.build_type}}

    - name: Copy Clang DLLs
      if: ${{ matrix.sys == 'clang64' }}
      run: |
        cp /clang64/bin/libc++.dll build/libc++.dll
        cp /clang64/bin/libcrypto-1_1-x64.dll build/libcrypto-1_1-x64.dll
        cp /clang64/bin/libssh2-1.dll build/libssh2-1.dll
        cp /clang64/bin/libunwind.dll build/libunwind.dll
        cp /clang64/bin/zlib1.dll build/zlib1.dll

    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: ChiraEngine-windows-${{matrix.sys}}-${{matrix.build_type}}
        path: |
          ${{github.workspace}}\build\resources\
          ${{github.workspace}}\build\ChiraEditor.exe
          ${{github.workspace}}\build\*.dll
